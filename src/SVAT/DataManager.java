package SVAT;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.List;
import java.util.Properties;

import javax.security.auth.callback.ConfirmationCallback;

import org.ini4j.Ini;
import org.ini4j.Wini;

public class DataManager {
	
	public static String OS = null;
	public static final String FILE_PATH = "C:\\settings.ini";

	private static String GsessionTime = "600";
	private static String GpwMinLenth = "8";
	private static String GpwMaxLenth = "0";
	private static String GpwMinDays = "1";
	private static String GpwMaxDays = "90";

	
	/**
	 * 설정 파일이 없으면 파일 생성
	 * @throws IOException 
	 */
	public static boolean findSettingFile() {
		try {
			File iniFile = new File(FILE_PATH);
			Ini ini = new Ini(iniFile);
			Wini wini = new Wini(iniFile);
			System.out.println("파일 있었음");
			
		} catch (FileNotFoundException e) {
			try {
				Properties p = new Properties();
				p.store( new FileOutputStream(FILE_PATH), null);
			} catch (IOException e1) { }
			System.out.println("파일생성 완료");
			return false;
			
		} catch (IOException e) {
			System.out.println("findSettingFile IOException ::: " + e);
		}
		
		return true; 
	}


	/**
	 * 가이드라인에 맞춰 데이터 초기화
	 * @param oSList 
	 * 
	 * @param OSList
	 * @param fileExist 
	 */
	public static void setGuideLineData(List<String> OSList, boolean fileExist) {
		try {
			File iniFile = new File(FILE_PATH);
			Wini wini = new Wini(iniFile);
			
			// 설정 파일이 없었으면 초기값 생성
			if( fileExist == false ) {
				for( int i = 0; i < OSList.size(); i++ ) {
					OS = OSList.get(i);
					wini.put(OS, "Session_Time", GsessionTime);
					wini.put(OS, "Password_Min_Length", GpwMinLenth);
					wini.put(OS, "Password_Max_Length", GpwMaxLenth);
					wini.put(OS, "Password_Min_Days", GpwMinDays);
					wini.put(OS, "Password_Max_Days", GpwMaxDays);
					wini.store();
				}
			}
		} catch (Exception e) {
			System.out.println(e);
		}	
	}

	/**
	 * 입력값 저장
	 * @param OSList 
	 * @param checkDataList
	 * @param btnChkList
	 * @param settingList 
	 */
	public static void setIniData(List<String> OSList, List<String> checkDataList, List<Boolean> btnChkList, List<String> settingList) {
		try {
			File iniFile = new File(FILE_PATH);
			Wini wini = new Wini(iniFile);

			// 운영체제 수만큼 반복
			for( int i = 0; i < OSList.size(); i++ ) {
				// 선택된 운영체제 확인
				if( btnChkList.get(i) == true ) {
					// 입력 항목 수만큼 반복
					for(int j = 0; j < checkDataList.size(); j++ ) {
						// 입력값이 있는 항목 확인해서 수정
						if (checkDataList.get(j) != "" && checkDataList.get(j) != null && !checkDataList.get(j).isEmpty()) {
							wini.put(OSList.get(i), settingList.get(j), checkDataList.get(j));
							wini.store();
						}
					}
				}				
			}
			
			// checkDataList 데이터 초기화
			for( int i = 0; i < checkDataList.size(); i ++ ) {
				checkDataList.set(i, null);
			}
			
			// btnChkList 데이터 초기화
			for( int i = 0; i < btnChkList.size(); i ++ ) {
				btnChkList.set(i, null);
			}
			
		} catch (IOException e) {
			System.out.println(e);
		}
	}

	public static void resetData(List<String> OSList, List<Boolean> btnChkList, List<String> settingList) {
		try {
			File iniFile = new File(FILE_PATH);
			Wini wini = new Wini(iniFile);

			// 운영체제 수만큼 반복
			for( int i = 0; i < OSList.size(); i++ ) {
				// 선택된 운영체제 확인
				if( btnChkList.get(i) == true ) {
					for( int j = 0; j < settingList.size(); j++) {
						wini.put(OSList.get(i), settingList.get(j), GsessionTime);	wini.store();
						wini.put(OSList.get(i), settingList.get(j), GpwMinLenth);	wini.store();
						wini.put(OSList.get(i), settingList.get(j), GpwMaxLenth);	wini.store();
						wini.put(OSList.get(i), settingList.get(j), GpwMinDays);	wini.store();
						wini.put(OSList.get(i), settingList.get(j), GpwMaxDays);	wini.store();
					}
				}				
			}
			
			// btnChkList 데이터 초기화
			for( int i = 0; i < btnChkList.size(); i ++ ) {
				btnChkList.set(i, null);
			}
			
		} catch (IOException e) {
			System.out.println(e);
		}
	}

	
}
